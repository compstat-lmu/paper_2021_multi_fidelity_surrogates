% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ObjectiveONNX.R
\name{ObjectiveONNX}
\alias{ObjectiveONNX}
\title{Objective interface for ONNX Models.}
\description{
Objective interface where user can pass an R function that works on an `data.table()`.
}
\section{Super classes}{
\code{\link[bbotk:Objective]{bbotk::Objective}} -> \code{\link[bbotk:ObjectiveRFunDt]{bbotk::ObjectiveRFunDt}} -> \code{ObjectiveONNX}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ObjectiveONNX$new()}}
\item \href{#method-clone}{\code{ObjectiveONNX$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Objective" data-id="eval">}\href{../../bbotk/html/Objective.html#method-eval}{\code{bbotk::Objective$eval()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Objective" data-id="format">}\href{../../bbotk/html/Objective.html#method-format}{\code{bbotk::Objective$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="Objective" data-id="print">}\href{../../bbotk/html/Objective.html#method-print}{\code{bbotk::Objective$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="ObjectiveRFunDt" data-id="eval_dt">}\href{../../bbotk/html/ObjectiveRFunDt.html#method-eval_dt}{\code{bbotk::ObjectiveRFunDt$eval_dt()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="bbotk" data-topic="ObjectiveRFunDt" data-id="eval_many">}\href{../../bbotk/html/ObjectiveRFunDt.html#method-eval_many}{\code{bbotk::ObjectiveRFunDt$eval_many()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveONNX$new(
  model_path,
  data_order,
  trafo_dict,
  domain,
  full_codomain,
  codomain,
  task = NULL,
  id = "ONNX",
  active_session = TRUE,
  retrafo = FALSE,
  properties = character(),
  constants = NULL,
  check_values = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_path}}{(`character`)\cr
Path to the onnx Model.}

\item{\code{data_order}}{(`character`)\cr
Order of columns in data.}

\item{\code{trafo_dict}}{(`list`)\cr
Dictionary containing feature transformations before beeing fed to the NN.}

\item{\code{full_codomain}}{([paradox::ParamSet])\cr
Full codomain.}

\item{\code{task}}{(`character(1)`)\cr
Name of a task to be fixed.}

\item{\code{id}}{(`character(1)`).}

\item{\code{active_session}}{(`logical(1)`)\cr
Whether an active session should be used.}

\item{\code{retrafo}}{(`logical(1)`)\cr
Should params be trafoed back to their original range before return?}

\item{\code{properties}}{(`character()`).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObjectiveONNX$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
